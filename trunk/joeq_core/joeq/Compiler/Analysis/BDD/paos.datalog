
### Domains

.include "fielddomains.pa"

.bddvarorder N0_F0_I0_M1_M0_V1xV0_T0_Z0_Z1_H2_H3_T1_H0_H1

### Relations

vP0 (v:V0, h:H0) input
vP (vc0:H2, v:V0, h:H0) output
hP (ha:H0, field:F0, hb:H1) output
S (base:V0, field:F0, src:V1) input
L (base:V0, field:F0, dest:V1) input
vT (var:V0, type:T0) input
hT (heap:H0, type:T1) input
aT (type:T0, type:T1) input
vPfilter (v:V0, h:H0)
cha (type:T1, name:N0, method:M0) input
actual (invoke:I0, num:Z0, actualparam:V1) input
formal (method:M0, num:Z0, formalparam:V0) input
Mret (method:M0, v:V1) input
Mthr (method:M0, v:V1) input
Iret (invoke:I0, v:V0) input
Ithr (invoke:I0, v:V0) input
mI (method:M0, invoke:I0, name:N0) input
IE0 (invoke:I0, target:M0) input
IE (invoke:I0, target:M0, ic0:H2, mc0:H3) output

### Rules

vP(_,v,h) :- vP0(v,h).
vPfilter(v,h) :- vT(v,tv), aT(tv,th), hT(h,th).

# Stores.
hP(h1,f,h2) :- S(v1,f,v2), vP(c0,v1,h1), vP(c0,v2,h2).

# Loads.
vP(c0,v2,h2) :- L(v1,f,v2), vP(c0,v1,h1), hP(h1,f,h2), vPfilter(v2,h2). split

# Statically-bound calls.
IE(i,m,a0,b0) :- mI(m1,i,0), IE0(i,m), actual(i,0,v0), vP(a0,v0,b0).

# Virtual calls.

IE(i,m,a0,b0) :- mI(m1,i,n), actual(i,0,v0), vP(a0,v0,b0), hT(b0,t), cha(t,n,m). findbestorder

# Return values and exceptions.
vP(a0,v,h) :- IE(i,m,a0,b0), Iret(i,v), Mret(m,v1), vP(b0,v1,h). split
vP(a0,v,h) :- IE(i,m,a0,b0), Ithr(i,v), Mthr(m,v1), vP(b0,v1,h). split

# First parameter.
vP(b0,v,a0) :- IE(i,m,a0,b0), formal(m,0,v).

# Parameters beyond 1.
vP(b0,v,h) :- formal(m,z,v), z != 0, IE(i,m,a0,b0), \
              actual(i,z,v1), vP(a0,v1,h). split
