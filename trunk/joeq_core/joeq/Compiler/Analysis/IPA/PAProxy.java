// Public proxy class for Compil3r.Analysis.IPA.PA
// Generated via Util.MakeProxy
package Compil3r.Analysis.IPA;

public class PAProxy {
  public PAProxy(PA that) {
    this.VerifyAssertions = that.VerifyAssertions;
    this.TRACE = that.TRACE;
    this.TRACE_SOLVER = that.TRACE_SOLVER;
    this.TRACE_BIND = that.TRACE_BIND;
    this.TRACE_RELATIONS = that.TRACE_RELATIONS;
    this.TRACE_OBJECT = that.TRACE_OBJECT;
    this.TRACE_CONTEXT = that.TRACE_CONTEXT;
    this.out = that.out;
    this.USE_JOEQ_CLASSLIBS = that.USE_JOEQ_CLASSLIBS;
    this.INCREMENTAL1 = that.INCREMENTAL1;
    this.INCREMENTAL2 = that.INCREMENTAL2;
    this.INCREMENTAL3 = that.INCREMENTAL3;
    this.ADD_CLINIT = that.ADD_CLINIT;
    this.ADD_THREADS = that.ADD_THREADS;
    this.ADD_FINALIZERS = that.ADD_FINALIZERS;
    this.IGNORE_EXCEPTIONS = that.IGNORE_EXCEPTIONS;
    this.FILTER_VP = that.FILTER_VP;
    this.FILTER_HP = that.FILTER_HP;
    this.THREAD_SENSITIVE = that.THREAD_SENSITIVE;
    this.OBJECT_SENSITIVE = that.OBJECT_SENSITIVE;
    this.CONTEXT_SENSITIVE = that.CONTEXT_SENSITIVE;
    this.DISCOVER_CALL_GRAPH = that.DISCOVER_CALL_GRAPH;
    this.DUMP_DOTGRAPH = that.DUMP_DOTGRAPH;
    this.FILTER_NULL = that.FILTER_NULL;
    this.LONG_LOCATIONS = that.LONG_LOCATIONS;
    this.INCLUDE_UNKNOWN_TYPES = that.INCLUDE_UNKNOWN_TYPES;
    this.INCLUDE_ALL_UNKNOWN_TYPES = that.INCLUDE_ALL_UNKNOWN_TYPES;
    this.bddnodes = that.bddnodes;
    this.bddcache = that.bddcache;
    this.resultsFileName = that.resultsFileName;
    this.callgraphFileName = that.callgraphFileName;
    this.initialCallgraphFileName = that.initialCallgraphFileName;
    this.newMethodSummaries = that.newMethodSummaries;
    this.rootMethods = that.rootMethods;
    this.cg = that.cg;
    this.ocg = that.ocg;
    this.bdd = that.bdd;
    this.V1 = that.V1;
    this.V2 = that.V2;
    this.I = that.I;
    this.H1 = that.H1;
    this.H2 = that.H2;
    this.Z = that.Z;
    this.F = that.F;
    this.T1 = that.T1;
    this.T2 = that.T2;
    this.N = that.N;
    this.M = that.M;
    this.V1c = that.V1c;
    this.V2c = that.V2c;
    this.H1c = that.H1c;
    this.H2c = that.H2c;
    this.V_BITS = that.V_BITS;
    this.I_BITS = that.I_BITS;
    this.H_BITS = that.H_BITS;
    this.Z_BITS = that.Z_BITS;
    this.F_BITS = that.F_BITS;
    this.T_BITS = that.T_BITS;
    this.N_BITS = that.N_BITS;
    this.M_BITS = that.M_BITS;
    this.VC_BITS = that.VC_BITS;
    this.HC_BITS = that.HC_BITS;
    this.MAX_VC_BITS = that.MAX_VC_BITS;
    this.MAX_HC_BITS = that.MAX_HC_BITS;
    this.Vmap = that.Vmap;
    this.Imap = that.Imap;
    this.Hmap = that.Hmap;
    this.Fmap = that.Fmap;
    this.Tmap = that.Tmap;
    this.Nmap = that.Nmap;
    this.Mmap = that.Mmap;
    this.vCnumbering = that.vCnumbering;
    this.hCnumbering = that.hCnumbering;
    this.oCnumbering = that.oCnumbering;
    this.A = that.A;
    this.vP = that.vP;
    this.S = that.S;
    this.L = that.L;
    this.vT = that.vT;
    this.hT = that.hT;
    this.aT = that.aT;
    this.cha = that.cha;
    this.actual = that.actual;
    this.formal = that.formal;
    this.Iret = that.Iret;
    this.Mret = that.Mret;
    this.Ithr = that.Ithr;
    this.Mthr = that.Mthr;
    this.mI = that.mI;
    this.mV = that.mV;
    this.sync = that.sync;
    this.fT = that.fT;
    this.fC = that.fC;
    this.hP = that.hP;
    this.IE = that.IE;
    this.IEcs = that.IEcs;
    this.vPfilter = that.vPfilter;
    this.hPfilter = that.hPfilter;
    this.NNfilter = that.NNfilter;
    this.IEfilter = that.IEfilter;
    this.visited = that.visited;
    this.staticCalls = that.staticCalls;
    this.varorder = that.varorder;
    this.reverseLocal = that.reverseLocal;
    this.V1toV2 = that.V1toV2;
    this.V2toV1 = that.V2toV1;
    this.H1toH2 = that.H1toH2;
    this.H2toH1 = that.H2toH1;
    this.V1H1toV2H2 = that.V1H1toV2H2;
    this.V2H2toV1H1 = that.V2H2toV1H1;
    this.V1ctoV2c = that.V1ctoV2c;
    this.V1cV2ctoV2cV1c = that.V1cV2ctoV2cV1c;
    this.V1cH1ctoV2cV1c = that.V1cH1ctoV2cV1c;
    this.T2toT1 = that.T2toT1;
    this.T1toT2 = that.T1toT2;
    this.V1set = that.V1set;
    this.V2set = that.V2set;
    this.H1set = that.H1set;
    this.H2set = that.H2set;
    this.T1set = that.T1set;
    this.T2set = that.T2set;
    this.Fset = that.Fset;
    this.Mset = that.Mset;
    this.Nset = that.Nset;
    this.Iset = that.Iset;
    this.Zset = that.Zset;
    this.V1V2set = that.V1V2set;
    this.V1Fset = that.V1Fset;
    this.V2Fset = that.V2Fset;
    this.V1FV2set = that.V1FV2set;
    this.V1H1set = that.V1H1set;
    this.H1Fset = that.H1Fset;
    this.H2Fset = that.H2Fset;
    this.H1H2set = that.H1H2set;
    this.H1FH2set = that.H1FH2set;
    this.IMset = that.IMset;
    this.INset = that.INset;
    this.IV1set = that.IV1set;
    this.INV1set = that.INV1set;
    this.INH1set = that.INH1set;
    this.INT2set = that.INT2set;
    this.T2Nset = that.T2Nset;
    this.MZset = that.MZset;
    this.V1cV2cset = that.V1cV2cset;
    this.V1cH1cset = that.V1cH1cset;
    this.H1cH2cset = that.H1cH2cset;
    this.rangeMap = that.rangeMap;
    this.object_class = that.object_class;
    this.javaLangObject_clone = that.javaLangObject_clone;
    this.cloneable_class = that.cloneable_class;
    this.throwable_class = that.throwable_class;
    this.javaLangObject_fakeclone = that.javaLangObject_fakeclone;
    this.last_V = that.last_V;
    this.last_H = that.last_H;
    this.last_T = that.last_T;
    this.last_N = that.last_N;
    this.last_F = that.last_F;
    this.finalizer_method = that.finalizer_method;
    this.main_method = that.main_method;
    this.run_method = that.run_method;
    this.old1_A = that.old1_A;
    this.old1_S = that.old1_S;
    this.old1_L = that.old1_L;
    this.old1_vP = that.old1_vP;
    this.old1_hP = that.old1_hP;
    this.old3_t3 = that.old3_t3;
    this.old3_vP = that.old3_vP;
    this.old3_t4 = that.old3_t4;
    this.old3_hT = that.old3_hT;
    this.old2_myIE = that.old2_myIE;
    this.old2_visited = that.old2_visited;
    this.TS = that.TS;
    this.thread_runs = that.thread_runs;
    this.varPathSelector = that.varPathSelector;
    this.THREADS_ONLY = that.THREADS_ONLY;
    this.heapPathSelector = that.heapPathSelector;
    this.polyClasses = that.polyClasses;
    this.MATCH_FACTORY = that.MATCH_FACTORY;
    this.objectPathSelector = that.objectPathSelector;
    this.V1H1correspondence = that.V1H1correspondence;
  }
  public static boolean VerifyAssertions;
  public boolean TRACE;
  public boolean TRACE_SOLVER;
  public boolean TRACE_BIND;
  public boolean TRACE_RELATIONS;
  public boolean TRACE_OBJECT;
  public boolean TRACE_CONTEXT;
  public java.io.PrintStream out;
  public static boolean USE_JOEQ_CLASSLIBS;
  public boolean INCREMENTAL1;
  public boolean INCREMENTAL2;
  public boolean INCREMENTAL3;
  public boolean ADD_CLINIT;
  public boolean ADD_THREADS;
  public boolean ADD_FINALIZERS;
  public boolean IGNORE_EXCEPTIONS;
  public boolean FILTER_VP;
  public boolean FILTER_HP;
  public boolean THREAD_SENSITIVE;
  public boolean OBJECT_SENSITIVE;
  public boolean CONTEXT_SENSITIVE;
  public boolean DISCOVER_CALL_GRAPH;
  public boolean DUMP_DOTGRAPH;
  public boolean FILTER_NULL;
  public boolean LONG_LOCATIONS;
  public boolean INCLUDE_UNKNOWN_TYPES;
  public boolean INCLUDE_ALL_UNKNOWN_TYPES;
  public int bddnodes;
  public int bddcache;
  public static java.lang.String resultsFileName;
  public static java.lang.String callgraphFileName;
  public static java.lang.String initialCallgraphFileName;
  public java.util.Map newMethodSummaries;
  public java.util.Set rootMethods;
  public Compil3r.Quad.CallGraph cg;
  public Compil3r.Analysis.IPA.ObjectCreationGraph ocg;
  public org.sf.javabdd.BDDFactory bdd;
  public org.sf.javabdd.BDDDomain V1;
  public org.sf.javabdd.BDDDomain V2;
  public org.sf.javabdd.BDDDomain I;
  public org.sf.javabdd.BDDDomain H1;
  public org.sf.javabdd.BDDDomain H2;
  public org.sf.javabdd.BDDDomain Z;
  public org.sf.javabdd.BDDDomain F;
  public org.sf.javabdd.BDDDomain T1;
  public org.sf.javabdd.BDDDomain T2;
  public org.sf.javabdd.BDDDomain N;
  public org.sf.javabdd.BDDDomain M;
  public org.sf.javabdd.BDDDomain V1c;
  public org.sf.javabdd.BDDDomain V2c;
  public org.sf.javabdd.BDDDomain H1c;
  public org.sf.javabdd.BDDDomain H2c;
  public int V_BITS;
  public int I_BITS;
  public int H_BITS;
  public int Z_BITS;
  public int F_BITS;
  public int T_BITS;
  public int N_BITS;
  public int M_BITS;
  public int VC_BITS;
  public int HC_BITS;
  public int MAX_VC_BITS;
  public int MAX_HC_BITS;
  public Util.Collections.IndexMap Vmap;
  public Util.Collections.IndexMap Imap;
  public Util.Collections.IndexMap Hmap;
  public Util.Collections.IndexMap Fmap;
  public Util.Collections.IndexMap Tmap;
  public Util.Collections.IndexMap Nmap;
  public Util.Collections.IndexMap Mmap;
  public Util.Graphs.PathNumbering vCnumbering;
  public Util.Graphs.PathNumbering hCnumbering;
  public Util.Graphs.PathNumbering oCnumbering;
  public org.sf.javabdd.BDD A;
  public org.sf.javabdd.BDD vP;
  public org.sf.javabdd.BDD S;
  public org.sf.javabdd.BDD L;
  public org.sf.javabdd.BDD vT;
  public org.sf.javabdd.BDD hT;
  public org.sf.javabdd.BDD aT;
  public org.sf.javabdd.BDD cha;
  public org.sf.javabdd.BDD actual;
  public org.sf.javabdd.BDD formal;
  public org.sf.javabdd.BDD Iret;
  public org.sf.javabdd.BDD Mret;
  public org.sf.javabdd.BDD Ithr;
  public org.sf.javabdd.BDD Mthr;
  public org.sf.javabdd.BDD mI;
  public org.sf.javabdd.BDD mV;
  public org.sf.javabdd.BDD sync;
  public org.sf.javabdd.BDD fT;
  public org.sf.javabdd.BDD fC;
  public org.sf.javabdd.BDD hP;
  public org.sf.javabdd.BDD IE;
  public org.sf.javabdd.BDD IEcs;
  public org.sf.javabdd.BDD vPfilter;
  public org.sf.javabdd.BDD hPfilter;
  public org.sf.javabdd.BDD NNfilter;
  public org.sf.javabdd.BDD IEfilter;
  public org.sf.javabdd.BDD visited;
  public org.sf.javabdd.BDD staticCalls;
  public java.lang.String varorder;
  public boolean reverseLocal;
  public org.sf.javabdd.BDDPairing V1toV2;
  public org.sf.javabdd.BDDPairing V2toV1;
  public org.sf.javabdd.BDDPairing H1toH2;
  public org.sf.javabdd.BDDPairing H2toH1;
  public org.sf.javabdd.BDDPairing V1H1toV2H2;
  public org.sf.javabdd.BDDPairing V2H2toV1H1;
  public org.sf.javabdd.BDDPairing V1ctoV2c;
  public org.sf.javabdd.BDDPairing V1cV2ctoV2cV1c;
  public org.sf.javabdd.BDDPairing V1cH1ctoV2cV1c;
  public org.sf.javabdd.BDDPairing T2toT1;
  public org.sf.javabdd.BDDPairing T1toT2;
  public org.sf.javabdd.BDD V1set;
  public org.sf.javabdd.BDD V2set;
  public org.sf.javabdd.BDD H1set;
  public org.sf.javabdd.BDD H2set;
  public org.sf.javabdd.BDD T1set;
  public org.sf.javabdd.BDD T2set;
  public org.sf.javabdd.BDD Fset;
  public org.sf.javabdd.BDD Mset;
  public org.sf.javabdd.BDD Nset;
  public org.sf.javabdd.BDD Iset;
  public org.sf.javabdd.BDD Zset;
  public org.sf.javabdd.BDD V1V2set;
  public org.sf.javabdd.BDD V1Fset;
  public org.sf.javabdd.BDD V2Fset;
  public org.sf.javabdd.BDD V1FV2set;
  public org.sf.javabdd.BDD V1H1set;
  public org.sf.javabdd.BDD H1Fset;
  public org.sf.javabdd.BDD H2Fset;
  public org.sf.javabdd.BDD H1H2set;
  public org.sf.javabdd.BDD H1FH2set;
  public org.sf.javabdd.BDD IMset;
  public org.sf.javabdd.BDD INset;
  public org.sf.javabdd.BDD IV1set;
  public org.sf.javabdd.BDD INV1set;
  public org.sf.javabdd.BDD INH1set;
  public org.sf.javabdd.BDD INT2set;
  public org.sf.javabdd.BDD T2Nset;
  public org.sf.javabdd.BDD MZset;
  public org.sf.javabdd.BDD V1cV2cset;
  public org.sf.javabdd.BDD V1cH1cset;
  public org.sf.javabdd.BDD H1cH2cset;
  public java.util.Map rangeMap;
  public Clazz.jq_Class object_class;
  public Clazz.jq_Method javaLangObject_clone;
  public Clazz.jq_Class cloneable_class;
  public Clazz.jq_Class throwable_class;
  public Clazz.jq_Method javaLangObject_fakeclone;
  public int last_V;
  public int last_H;
  public int last_T;
  public int last_N;
  public int last_F;
  public Clazz.jq_NameAndDesc finalizer_method;
  public static Clazz.jq_NameAndDesc main_method;
  public static Clazz.jq_NameAndDesc run_method;
  public org.sf.javabdd.BDD old1_A;
  public org.sf.javabdd.BDD old1_S;
  public org.sf.javabdd.BDD old1_L;
  public org.sf.javabdd.BDD old1_vP;
  public org.sf.javabdd.BDD old1_hP;
  public org.sf.javabdd.BDD old3_t3;
  public org.sf.javabdd.BDD old3_vP;
  public org.sf.javabdd.BDD old3_t4;
  public org.sf.javabdd.BDD old3_hT;
  public org.sf.javabdd.BDD old2_myIE;
  public org.sf.javabdd.BDD old2_visited;
  public Compil3r.Analysis.IPA.PA.ToString TS;
  public static java.util.Map thread_runs;
  public Compil3r.Analysis.IPA.PA.VarPathSelector varPathSelector;
  public static boolean THREADS_ONLY;
  public Compil3r.Analysis.IPA.PA.HeapPathSelector heapPathSelector;
  public static java.util.Set polyClasses;
  public static boolean MATCH_FACTORY;
  public Compil3r.Analysis.IPA.PA.ObjectPathSelector objectPathSelector;
  public java.util.Map V1H1correspondence;
}
